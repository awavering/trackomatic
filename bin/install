#!/bin/bash

NVM_LABEL="Node Version Manager (nvm)"
NODE_VERSION=$(cat .nvmrc)
NODE_LABEL="Node.js $NODE_VERSION"

# Is there a better way to get a package name? This is following:
# 1. http://stackoverflow.com/questions/1955505/parsing-json-with-sed-and-awk
# 2. http://stackoverflow.com/questions/17375940/decode-json-in-bash-using-python-mjson-tool
PROJECT_NAME=$(cat package.json | python -c 'import sys, json; print json.load(sys.stdin)["name"]')

echo
echo "Welcome. This script will install dependencies for $PROJECT_NAME."
echo "If you would like to read the contents of this script before running"
echo "it, check ./bin/install or answer 'N'."
echo

# read -p "Continue? [y/n] " -n 1
read -p "Continue? [y/n]" -n 1 -r
echo
echo
if [[ ! "$REPLY" =~ ^[Yy]$ ]]
then
    cat ./bin/install
    echo "Goodbye."
    exit
fi

# Pull in NVM if it already exists
if [ -e ~/.nvm/nvm.sh ]
then source ~/.nvm/nvm.sh
fi

# First, we need to install Node Version Manager
# https://github.com/creationix/nvm
if type nvm >/dev/null 2>&1; then
    echo "✓ $NVM_LABEL installed"
else
    read -p "Install $NVM_LABEL? [y/n] " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.28.0/install.sh | bash
        source ~/.nvm/nvm.sh
    fi
fi

# Next, install the version of Node used by this project (found in .nvmrc).
# More on that here:
# https://github.com/creationix/nvm#usage
if [ ! "$NODE_VERSION" == "$(nvm version)" ]; then
    read -p "Install $NODE_LABEL? [y/n] " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]
    then
        nvm install $NODE_VERSION
        nvm use $NODE_VERSION
    fi
else
    echo "✓ $NODE_LABEL installed"
fi

# Finally, pull down dependencies
echo
echo "Installing dependencies..."
npm install --ignore-scripts
bundle install --quiet
echo
echo "All set! Boot $PROJECT_NAME by running: npm start"
